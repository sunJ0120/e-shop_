plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.e-shop'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// === QueryDsl 시작 ===

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// === QueryDsl 끝 ===

	//spring boot devtools 추가하기
	implementation 'org.springframework.boot:spring-boot-devtools'

	//thymeleaf layout 추가하기
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	// Spring Security 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Security test 의존성 추가
	testImplementation 'org.springframework.security:spring-security-test'

	//spring boot starter validation 추가하기
	implementation 'org.springframework.boot:spring-boot-starter-validation'

}
// === Querydsl 빌드 옵션 (선택사항) ===
def querydslDir = "$buildDir/generated/querydsl"

tasks.named('test') {
	useJUnitPlatform()
}




